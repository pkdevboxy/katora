{"name":"Katora","tagline":"Minimal implementation of container-interop/container-interop package, with addition of service extensions & declarative dependency resolution.","body":"# vaibhavpandeyvpz/katora\r\nMinimal implementation of [container-interop/container-interop](https://github.com/container-interop/container-interop) package, with addition of service extensions & declarative dependency resolution.\r\n\r\n[![Build Status](https://img.shields.io/travis/vaibhavpandeyvpz/katora/master.svg?style=flat-square)](https://travis-ci.org/vaibhavpandeyvpz/katora)\r\n\r\nInstall\r\n------\r\n```bash\r\ncomposer require vaibhavpandeyvpz/katora\r\n```\r\n\r\nTesting\r\n------\r\n``` bash\r\nvendor/bin/phpunit\r\n```\r\n\r\nUsage\r\n------\r\n```php\r\n<?php\r\n\r\nrequire_once __DIR__ . '/vendor/autoload.php';\r\n\r\n$container = new Katora\\Container();\r\n\r\n/**\r\n * Setting static values can be done in any way i.e., \\ArrayAccess or method call\r\n */\r\n// $container->add('config', array(\r\n$container['config'] =  array(\r\n    'db' => array(\r\n        'dsn' => 'mysql:host=localhost;dbname=katora',\r\n        'username' => 'root',\r\n        'password' => null,\r\n        'options' => array(\r\n            PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION\r\n        ),\r\n        'charset' => 'utf8'\r\n    )\r\n);\r\n\r\n/**\r\n * Declared dependencies will be passed as arguments to callback.\r\n */\r\n// $container->factory('pdo', function (/** Dependencies */ array $config)\r\n$container->singleton('pdo', function (/** Dependencies */ array $config)\r\n{\r\n    return new PDO(\r\n        $config['db']['dsn'],\r\n        $config['db']['username'],\r\n        $config['db']['password'],\r\n        $config['db']['options']\r\n    );\r\n}, /** Dependencies */ 'config');\r\n\r\n/**\r\n * First argument passed to callback will be created\r\n * service i.e., PDO then come the dependencies (optional)\r\n */\r\n$container->extend('pdo', function (PDO $pdo, /** Dependencies */ array $config)\r\n{\r\n    $pdo->exec(\"SET NAMES {$config['db']['charset']}\");\r\n    // You must return the same or a new instance\r\n    return $pdo;\r\n}, /** Dependencies */ 'config');\r\n\r\n/**\r\n * Later in code, fetch the service by name\r\n */\r\n /** @var PDO $pdo */\r\n$pdo = $container['pdo'];\r\n```\r\n\r\nLicense\r\n------\r\nSee [LICENSE.md](https://github.com/vaibhavpandeyvpz/katora/blob/master/LICENSE.md) file.\r\n","google":"UA-67528024-2","note":"Don't delete this file! It's used internally to help with page regeneration."}